{"version":3,"sources":["utils.js","components/PokemonCard.jsx","components/PokemonList.jsx","components/PokemonInfo.jsx","App.js","hooks/useFetch.js","index.js"],"names":["capitalLetter","string","toUpperCase","slice","sortByTypes","a","b","types","type","name","PokemonCard","props","id","url","selectPokemon","makeTypeColor","grass","fire","electric","poison","flying","normal","bug","water","ground","fairy","className","onClick","alt","src","map","idx","style","backgroundColor","PokemonList","pokemons","pokemon","imageUrl","PokemonInfo","sortedStats","stats","sort","stat","join","item","base_stat","totalMoves","App","useState","setPokemons","nextChunk","setNextChunk","error","setError","loading","setLoading","fetch","response","json","data","urls","results","Promise","allSettled","then","r","result","value","sprites","front_default","moves","length","state","next","useFetch","getPokemons","selectedPokemon","setSelectedPokemon","useEffect","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62bb9440.chunk.js","sourcesContent":["export function capitalLetter(string) {\r\n  return string[0].toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const sortByStats = (stats) => {\r\n  return stats.sort((a, b) => {\r\n    if (a.stat.name < b.stat.name) {\r\n      return -1;\r\n    }\r\n    if (a.stat.name > b.stat.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortByTypes = (a, b) => {\r\n  if (a.types[0].type.name < b.types[0].type.name) {\r\n    return -1;\r\n  }\r\n  if (a.types[0].type.name > b.types[0].type.name) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n","import { capitalLetter } from \"../utils\";\r\n\r\nexport const PokemonCard = (props) => {\r\n  const { name, id, types, url, selectPokemon } = props;\r\n\r\n  function makeTypeColor(type) {\r\n    const colors = {\r\n      grass: \"#70e000\",\r\n      fire: \"#ec7672\",\r\n      electric: \"#ffde7b\",\r\n      poison: \"#c5b3cf\",\r\n      flying: \"#d8e2dc\",\r\n      normal: \"#ccd5ae\",\r\n      bug: \"#718355\",\r\n      water: \"#168aad\",\r\n      ground: \"#936639\",\r\n      fairy: \"#ff9100\",\r\n    };\r\n    return colors[type];\r\n  }\r\n\r\n  function getPokemonInfo() {\r\n    selectPokemon(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-card\" onClick={getPokemonInfo}>\r\n      <img alt=\"pokemon-img\" className=\"pokemon-img\" src={url} />\r\n      <h3>{name}</h3>\r\n      <div className=\"pokemon-types-wrapper\">\r\n        {types?.map(({ type }, idx) => (\r\n          <span\r\n            key={`${type}-${idx}`}\r\n            className=\"pokemon-type\"\r\n            style={{ backgroundColor: makeTypeColor(type.name) }}\r\n          >\r\n            {capitalLetter(type.name)}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { PokemonCard } from \"./PokemonCard\";\r\n\r\nexport const PokemonList = ({ pokemons, selectPokemon }) => {\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {pokemons &&\r\n        pokemons.map((pokemon) => (\r\n          <PokemonCard\r\n            key={`${pokemon.name}-${pokemon.id}`}\r\n            id={pokemon.id}\r\n            types={pokemon.types}\r\n            name={pokemon.name}\r\n            url={pokemon.imageUrl}\r\n            selectPokemon={selectPokemon}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n","import { capitalLetter, sortByStats } from \"../utils\";\r\n\r\nexport const PokemonInfo = ({ pokemon }) => {\r\n  const sortedStats = sortByStats(pokemon.stats);\r\n  return (\r\n    <div className=\"pokemon-info\">\r\n      <img\r\n        alt=\"pokemon-img\"\r\n        className=\"pokemonInfo-img\"\r\n        src={pokemon.imageUrl}\r\n      />\r\n      <h3>\r\n        {pokemon.name}{\" \"}\r\n        {pokemon.id < 10\r\n          ? `#00${pokemon.id}`\r\n          : pokemon.id > 100\r\n          ? pokemon.id\r\n          : `#0${pokemon.id}`}\r\n      </h3>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Type</td>\r\n            <td>\r\n              {pokemon.types\r\n                .map(({ type }) => capitalLetter(type.name))\r\n                .join(\", \")}\r\n            </td>\r\n          </tr>\r\n          {sortedStats.map((item, idx) => (\r\n            <tr key={`${item.base_stat}-${idx}`}>\r\n              <td>{capitalLetter(item.stat.name)}</td>\r\n              <td>{item.base_stat}</td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td>Total moves</td>\r\n            <td>{pokemon.totalMoves}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { PokemonList } from \"./components/PokemonList\";\r\nimport { PokemonInfo } from \"./components/PokemonInfo\";\r\n\r\nimport { useFetch } from \"./hooks/useFetch\";\r\nimport { sortByTypes } from \"./utils\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [{ pokemons, nextChunk, error, loading }, setPokemons, getPokemons] =\r\n    useFetch();\r\n  const [selectedPokemon, setSelectedPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getPokemons(\"https:pokeapi.co/api/v2/pokemon/?limit=12\");\r\n  }, []);\r\n\r\n  function selectPokemon(id) {\r\n    const pokemon = pokemons.find((pokemon) => pokemon.id === id);\r\n    setSelectedPokemon(pokemon);\r\n  }\r\n\r\n  function showMorePokemons() {\r\n    getPokemons(nextChunk);\r\n  }\r\n\r\n  function sortPokemons() {\r\n    setPokemons((pokemons) => [...pokemons].sort(sortByTypes));\r\n  }\r\n\r\n  if (error) {\r\n    return <h2>Fetching error</h2>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <section className=\"section-inner\">\r\n        <h1 className=\"header\">Pokedex</h1>\r\n        <section className=\"section-content\">\r\n          <div className=\"pokemon-list-wrapper\">\r\n            <PokemonList pokemons={pokemons} selectPokemon={selectPokemon} />\r\n            <div className=\"btn-group\">\r\n              <button className=\"btn\" onClick={showMorePokemons}>\r\n                Load More\r\n              </button>\r\n              <button className=\"btn\" onClick={sortPokemons}>\r\n                Sort by type\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {selectedPokemon && <PokemonInfo pokemon={selectedPokemon} />}\r\n        </section>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\nimport { capitalLetter } from \"../utils\";\r\n\r\nexport const useFetch = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [nextChunk, setNextChunk] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function getPokemons(url) {\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const urls = data.results.map(({ url }) => url);\r\n      const result = await Promise.allSettled(\r\n        urls.map((url) => fetch(url).then((r) => r.json()))\r\n      );\r\n      const pokemons = result.map(({ value }) => {\r\n        return {\r\n          name: capitalLetter(value.name),\r\n          types: value.types,\r\n          stats: value.stats,\r\n          imageUrl: value.sprites.front_default,\r\n          totalMoves: value.moves.length,\r\n          id: value.id,\r\n        };\r\n      });\r\n      setPokemons((state) => [...state, ...pokemons]);\r\n      setLoading(false);\r\n      setNextChunk(data.next);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return [\r\n    {\r\n      pokemons,\r\n      nextChunk,\r\n      error,\r\n      loading,\r\n    },\r\n    setPokemons,\r\n    getPokemons,\r\n  ];\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}